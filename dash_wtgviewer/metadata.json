{
  "src/lib/components/DashWtgviewer.react.js": {
    "description": "",
    "displayName": "DashWtgviewer",
    "methods": [],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": ""
      },
      "model": {
        "type": {
          "name": "custom",
          "raw": "{\n    name: PropTypes.string,\n    id: PropTypes.string,\n    foundation: PropTypes.shape({\n        name: PropTypes.string,\n        id: PropTypes.string,\n        node_sets: PropTypes.arrayOf(\n        PropTypes.shape({\n            name: PropTypes.string,\n            id: PropTypes.string,\n            nodes: PropTypes.arrayOf(PropTypes.number)\n        })\n        ),\n        element_sets: PropTypes.arrayOf(\n        PropTypes.shape({\n            name: PropTypes.string,\n            id: PropTypes.string,\n            elements: PropTypes.arrayOf(PropTypes.number)\n        })\n        )\n    }),\n    tower: PropTypes.shape({\n        name: PropTypes.string,\n        id: PropTypes.string,\n        node_sets: PropTypes.arrayOf(\n        PropTypes.shape({\n            name: PropTypes.string,\n            id: PropTypes.string,\n            nodes: PropTypes.arrayOf(PropTypes.number)\n        })\n        ),\n        element_sets: PropTypes.arrayOf(\n        PropTypes.shape({\n            name: PropTypes.string,\n            id: PropTypes.string,\n            elements: PropTypes.arrayOf(PropTypes.number)\n        })\n        )\n    }),\n    nacelle: PropTypes.shape({\n        name: PropTypes.string,\n        id: PropTypes.string,\n        element_sets: PropTypes.arrayOf(\n        PropTypes.shape({\n            name: PropTypes.string,\n            id: PropTypes.string,\n            elements: PropTypes.arrayOf(PropTypes.number)\n        })\n        )\n    }),\n    hub: PropTypes.shape({\n        name: PropTypes.string,\n        id: PropTypes.string,\n        cone: PropTypes.shape({\n        id: PropTypes.number,\n        eltype: PropTypes.string,\n        nodes: PropTypes.arrayOf(PropTypes.number),\n        diameter: PropTypes.number\n        })\n    }),\n    blades: PropTypes.arrayOf(\n        PropTypes.shape({\n        name: PropTypes.string,\n        id: PropTypes.string,\n        url: PropTypes.string,\n        node: PropTypes.number\n        })\n    )\n}"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      }
    }
  }
}